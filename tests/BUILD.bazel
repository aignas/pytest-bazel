load("@rules_python//python:py_test.bzl", "py_test")
load("@rules_python//python:py_library.bzl", "py_library")
load("@rules_python//python/entry_points:py_console_script_binary.bzl", "py_console_script_binary")
load("@rules_python//third_party/rules_pycross/pycross/private:wheel_library.bzl", "py_wheel_library")

# TODO @aignas 2024-06-29: discuss to exposing this as an alternative way to
# have a wheel, it may be super useful in conjunction with `py_wheel` rule that
# create an actual wheel. Maybe we could also pass the deps in some way to the
# `py_wheel_library`?
py_wheel_library(
    name = "pytest-bazel",
    wheel = "//pkg:whl",
    deps = [
        "@pypi//pytest",
        "@pypi//pytest_shard",
        "@pypi//pytest_randomly",
    ],
    testonly = True,
)

py_library(
    name = "test_example",
    srcs = ["test_example.py"],
    testonly = True,
)

filegroup(
    name = "entry_points",
    srcs = ["entry_points.txt"],
)

py_console_script_binary(
    name = "test_simple",
    pkg = ":pytest-bazel",
    entry_points_txt = ":entry_points",
    script = "pytest_bazel",
    binary_rule = py_test,
    deps = [
        ":test_example",
        # Extra deps
    ],
    testonly = True,
)
